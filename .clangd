# https://clangd.llvm.org/config

# Apply a config conditionally to all C files
If:
  PathMatch: .*\.(c|h)$

---

# Apply a config conditionally to all C++ files
If:
  PathMatch: .*\.(cc|cpp|cxx|hh|hxx|hpp)$
CompileFlags:
  Add:
    - -x
    - c++

---

# Apply a config conditionally to all CUDA files
If:
  PathMatch: .*\.cuh?
CompileFlags:
  Add:
    # Allow variadic CUDA functions
    - -x
    - cuda
    - -Wno-unknown-cuda-version
    - -Wno-pragma-system-header-outside-header
    - --no-cuda-version-check
    - "-DLIBCUDACXX_ENABLE_EXPERIMENTAL_MEMORY_RESOURCE"
    - "-Xclang=-fcuda-allow-variadic-functions"
    - -D__CUDA_ARCH__=1200
  Remove:
    - -G
    - -stdpar

---

# Tweak the clangd parse settings for all files
CompileFlags:
  Add:
    # report all errors
    - "-ferror-limit=0"
    - "-ftemplate-backtrace-limit=0"
    - "-Xclang=-fskip-odr-check-in-gmf"
  Remove:
    # strip gcc's -fcoroutines
    - -fcoroutines
    - "-forward-unknown-to-host-compiler"
    # strip CUDA fatbin args
    - "-Xfatbin*"
    - "-Xcompiler*"
    - "-Xcudafe*"
    - "-rdc=*"
    - "-gpu=*"
    - "--diag_suppress*"
    - "-arch=native"
    - "-ptx"
    - "--options-file"
    - "-rdc=true"
    - "-fconcepts-diagnostics-depth=10"
    # strip CUDA arch flags
    - "-gencode*"
    - "--generate-code*"
    # strip CUDA flags unknown to clang
    - "-ccbin*"
    - "--compiler-options*"
    - "--extended-lambda"
    - "--expt-extended-lambda"
    - "--expt-relaxed-constexpr"
    - "-Werror=cross-execution-space-call"
    - "--keep"
    - "--generate-line-info"
Diagnostics:
  UnusedIncludes: None
  Suppress:
    - "variadic_device_fn"
    - "attributes_not_allowed"
    # The NVHPC version of _NVCXX_EXPAND_PACK macro triggers this clang error.
    # Temporarily suppressing it, but should probably fix
    - "template_param_shadow"
